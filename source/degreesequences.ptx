<section xml:id="sec-degreesequences">
    <title>Degree Sequences</title>

    <p>
        We have seen that the degrees of the vertices play several key roles for graphs.
        This leads us to the following definition and theorem.
    </p>

    <definition xml:id="def-degreesequence">
        <statement>
            <p>
                Given a finite graph <m>G</m>, the <em>degree sequence</em> of <m>G</m> is the sequence of vertex degrees of <m>G</m> written in non-increasing order.
                If a sequence <m>\mathbf{d}=(d_1,d_2,\ldots,d_n)</m> with <m>d_1 \geq d_2 \geq \cdots \geq d_n</m> is the degree sequence of a graph, then we say <m>\mathbf{d}</m> is a <em>graphic sequence</em>.
                Note that there might be more than one graph with the same graphic sequence.
            </p>
        </statement>
    </definition>
    <example>
        <p>
            The degree sequence of the following graph is <m>(7, 6, 6, 5, 5, 4, 3, 3, 3, 2)</m>.

        </p>
        <figure xml:id="fig-degree_sequence">
    <caption>Example for graph degree sequence</caption>
    <image source="degreesequencegraph.png" width="75%"/>
</figure>
    </example>
    
    <exercise>
        <p>
            For each of the following degree sequences, create a graph having that degree sequence.
            <ol>
                <li>
                    <p>
                        <m>(2,2,2,2,2)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(5,2,2,1,1,1,1,1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(6,3,3,3,3,3,3)</m>
                    </p>
                </li>
            </ol>
        </p>
    </exercise>

    <p>
        The main question we will ask about degree sequences is: which non-increasing lists of integers are graphic?
    </p>

    <p>
        We will start by investigating a special class of graphs called <em>threshold graphs</em>.
    </p>

    <definition xml:id="def-thresholdgraph">
        <statement>
            <p>
                Consider the following two operations on a finite graph <m>G</m>:
                <ul>
                    <li>
                        <p>
                            <em>Isolated addition (I):</em> add a new vertex of degree zero to <m>G</m>, i.e., add an isolated vertex.
                        </p>
                    </li>
                    <li>
                        <p>
                            <em>Suspension (S):</em> add a new vertex that is connected by an edge to every vertex of <m>G</m>; the resulting graph is called the suspension of <m>G</m>.
                        </p>
                    </li>
                </ul>
                A <em>threshold graph</em> is a graph obtained by starting with a single vertex and applying any sequence of isolated additions and suspensions.
            </p>
        </statement>
    </definition>

    <exercise>
        <p>
            For each of the following sequences (read from left to right) of isolated additions and suspensions, find the resulting threshold graph and calculate its degree sequence.
            Remember to <em>start with a single vertex before you apply these operations!</em>
            <ol>
                <li>
                    <p>
                        SSSSSS
                    </p>
                </li>
                <li>
                    <p>
                        IIISIIIS (i.e., add three isolated vertices to the first isolated vertex, followed by a suspension, followed by adding three more isolated vertices, followed by another suspension)
                    </p>
                </li>
                <li>
                    <p>
                        SISISIS
                    </p>
                </li>
                <li>
                    <p>
                        SSSIISISS
                    </p>
                </li>
            </ol>
        </p>
    </exercise>

    <exercise>
        <p>
            For a threshold graph with <m>n</m> vertices with degree sequence <m>(d_1,d_2,\ldots,d_n)</m>, explain why 
            <me>
                d_1 = \sum_{j=2}^n\min(1,d_j) \, .
            </me>
        </p>
    </exercise>
    <exercise>
        <p>
            For a threshold graph with <m>n</m> vertices with degree sequence <m>(d_1,d_2,\ldots,d_n)</m> and <m>d_2\geq 1</m>, explain why 
            <me>
                d_1 + d_2 = 2 + \sum_{j=3}^n\min(2,d_j) \, .
            </me>
            Hint: Think about counting the vertex-edge adjacencies for each edge adjacent to <m>v_1</m> or <m>v_2</m>.
        </p>
    </exercise>

    <p>
        These observations lead us to the following property of threshold graphs.
    </p>

    <definition xml:id="def-correctedDurfeenumber">
        <statement>
            <p>
                Given a graphic degree sequence <m>\mathbf{d}=(d_1,d_2,\ldots,d_n)</m>, the <em>corrected Durfee number</em> is
                <me>
                    m=m(\mathbf{d})= |\{j:d_j\geq j-1\}| \, .
                </me>
            </p>
        </statement>
    </definition>

    <exercise>
        <p>
            Find the corrected Durfee number for each of the following degree sequences:
            <ol>
                <li>
                    <p>
                        <m>(2,2,2,2,2)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(5,2,2,1,1,1,1,1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(6,3,3,3,3,3,3)</m>
                    </p>
                </li>
            </ol>
        </p>
    </exercise>

    <theorem xml:id="thm-thresholdcharacterization">
        <statement>
            <p>
                If <m>G</m> is a threshold graph on <m>n</m> vertices with degree sequence <m>\mathbf{d}=(d_1,d_2,\ldots,d_n)</m>, then for every <m>1\leq k \leq m(\mathbf{d})</m> we have
                    <me>
                        \sum_{i=1}^k d_i = k(k-1) + \sum_{j=k+1}^n \min(k,d_j) \, .
                    </me>
            </p>
        </statement>
    </theorem>

    <exercise>
        <p>
            Write out each of these equalities for <m>n=6</m> and <m>k=1,2,3,4,5</m>.
        </p>
    </exercise>

    <p>
        We start with the following lemma.
        We write <m>N_G(v)</m> or <m>N(v)</m> to denote the set of vertices in <m>G</m> that are adjacent to <m>v</m>, i.e., connected to <m>v</m> by an edge.
        This set is called the <em>neighbors</em> of <m>v</m>.
    </p>

    <lemma xml:id="lem-thresholdnesting">
        <statement>
            <p>
                Relabel the vertex set of a threshold graph <m>G</m> as <m>\{v_1,\ldots,v_n\}</m> such that <m>d_i=\deg(v_i)</m>. 
                With this labeling, if <m>N(v_j)</m> contains <m>s</m> elements, then <m>N(v_j)</m> consists of the first <m>s</m> vertices from the list
                 <me>
                    (v_1,v_2,\ldots,v_{j-1},v_{j+1},\ldots,v_n) \, .
                 </me>
            </p>
        </statement>
    </lemma>

    <proof>
        <p>
            We prove this by induction on the number of vertices in <m>G</m>.
            If there are one or two vertices, then this is true since the sets under consideration are empty.
            Now, suppose that <m>G'</m> is a threshold graph on <m>n</m> vertices for which the lemma holds. 
            When we add a vertex to <m>G'</m>, resulting in a graph <m>G</m> with one more vertex, then this can either happen through an isolated vertex or suspension move.
            If an isolated vertex is added, then none of the neighborhoods of the vertices change, and the new vertex (having degree zero) is labeled as <m>v_{n+1}</m>, so the result holds since it already holds for <m>G'</m>.
        </p>
        <p>
            If a suspension vertex is added, then the new vertex has degree <m>n</m> and is labeled <m>v_1</m>, while all other vertices have their degrees increased by one and their labels are each increased by one.
            As <m>v_1</m> is added to the neighborhood of every existing vertex, then since <m>N_{G'}(v_j)</m> consists of the first <m>s</m> vertices from the list for <m>G'</m>, and the new <m>v_1</m> is a neighbor in <m>G</m> of every vertex in <m>G'</m>, we have that the claim regarding the initial segment of vertices being neighbors also holds in <m>G</m>.
        </p>
    </proof>

       <exercise>
        <p>
            Let <m>G</m> be the threshold graph obtained via the construction SSSIISISS
            <ol>
                <li>
                    <p>
                        Verify that this lemma holds for <m>G</m> .
                    </p>
                </li>
                <li>
                    <p>
                        Go through the induction step in the proof of the lemma above starting from <m>G</m>.
                    </p>
                </li>
            </ol>
        </p>
    </exercise>

    <proof>
        <title>Proof of <xref ref="thm-thresholdcharacterization"/></title>
        <p>
            To prove that a threshold graph <m>G</m> on <m>n</m> vertices satisfies 
            <me>
                \sum_{i=1}^k d_i = k(k-1) + \sum_{j=k+1}^n \min(k,d_j)
            </me>
            for every <m>1\leq k\leq m(\mathbf{d})</m>, we will count the quantity <m>\sum_{i=1}^k d_i</m> in two ways.
        First, observe that <m>\sum_{i=1}^k d_i</m> counts the number of vertex-edge pairs <m>(v,e)</m> where <m>v\in \{v_1,\ldots,v_k\}</m> and <m>v</m> is incident to <m>e</m>.
        </p>
        <p>
            Second, since <m>k\leq m(\mathbf{d})</m>, we have that <m>d_i\geq i-1</m> for all <m>i\leq k</m>, and thus <m>v_1,\ldots,v_{i-1}</m> are all neighbors of each such <m>v_i</m>.
            Thus, the first <m>k</m> vertices in <m>G</m> form a complete graph, which has <m>k(k-1)/2</m> edges, leading to <m>k(k-1)</m> vertex-edge pairs.
            Each vertex <m>v_j</m> for <m>j\geq k+1</m> is connected to the first <m>d_j</m> vertices in <m>G</m>.
            If <m>d_j\geq k</m>, then this corresponds to <m>k</m> vertex-edge adjacencies involving a vertex in <m>\{v_1,\ldots,v_k\}</m>.
            If <m>d_j\lt k</m>, then this corresponds to <m>d_j</m> such adjacencies.
            Thus, the left-hand and right-hand side of the equality both enumerate the same set, and thus are equal.
        </p>
    </proof>

    <exercise>
        <p>
            <ol>
                <li>
                    <p>
                        What goes wrong with this argument if we have a <m>k</m> where <m>d_k\leq k-2</m>?
                    </p>
                </li>
                <li>
                    <p>
                        Discuss the above proof. What makes sense? What is confusing? Draw examples to investigate!
                    </p>
                </li>
            </ol>
        </p>
    </exercise>
 

    <p>
        What is remarkable about threshold graphs is that they are the most extreme you can get with regard to these numerical relationships for degree sequences.
        Specifically, the following theorem due to Erdős and Gallai (which we will state without proof) characterizes graphical degree sequences by relaxing the equalities that we have been investigating.

    </p>

    <theorem xml:id="thm-erdosgallai">
        <title>Erdős-Gallai theorem</title>
        <statement>
            <p>
                A sequence of non-negative integers <m>(d_1,d_2,\ldots,d_n)</m> is graphic if and only if <m>d_1+d_2+\cdots + d_n</m> is even and for every <m>1\leq k \leq n</m> we have
                <me>
                        \sum_{i=1}^k d_i \leq k(k-1) + \sum_{j=k+1}^n \min(k,d_j) \, .
                    </me>
            </p>
        </statement>
    </theorem>

<exercise>
        <p>
            For each of the following sequences, determine whether or not it is graphic.
            <ol>
                <li>
                    <p>
                        <m>(5,5,5,5,5,3,3,1,1,1,1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(7, 5, 5, 4, 4, 3, 3, 2, 2, 1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(8,4,3,3,1,1,1,1,1,1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(7, 6, 6, 5, 5, 5, 4, 4)</m>
                    </p>
                </li>
            </ol>
        </p>
    </exercise>

    <p>
        There is another beautiful recursive characterization of degree sequences.
        We call a sequence <m>(d_1,d_2,\ldots,d_n)</m> a <em>proper sequence</em> if 
        <me>
            n-1\geq d_1\geq d_2\geq \cdots \geq d_n \geq 0 \, .
        </me>
    </p>

    <theorem xml:id="thm-havelhakimi">
        <title>Havel-Hakimi Theorem</title>
        
        
        <statement>
            <p>
                Let <m>\mathbf{d}=(d_1,d_2,\ldots,d_n)</m> be a proper sequence.
                For any <m>i</m>, let <m>\mathbf{c}=(c_1,c_2,\ldots,c_{n-1})</m> be the sequence obtained from <m>\mathbf{d}</m> by deleting <m>d_i</m> and decreasing each of the first <m>d_i</m> remaining entries by <m>1</m>; we call this operation a <em>Havel-Hakimi step</em> in position <m>i</m>.
                Then   <m>\mathbf{d}</m> is graphic if and only if <m>\mathbf{c}</m> is.
            </p>
        </statement>
    </theorem>

<exercise>
        <p>
            For each of the following degree sequences, verify that this theorem holds when <m>i=3</m>.
            <ol>
                <li>
                    <p>
                        <m>(2,2,2,2,2)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(5,2,2,1,1,1,1,1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(6,3,3,3,3,3,3)</m>
                    </p>
                </li>
            </ol>
        </p>
    </exercise>


    <proof>
        <p>
            We first prove that if <m>\mathbf{c}</m> is graphic, then so is <m>\mathbf{d}</m>. 
            Suppose <m>\mathbf{c}</m> is a graphic sequence, i.e., there is a graph that realizes the degree sequence <m>\mathbf{c}</m>.
            Suppose <m>i_1,\ldots,i_k</m> are the indices of the entries that had their degree dropped when <m>d_i</m> was removed.
            Starting with a graph <m>G_{\mathbf{c}}</m> with degree sequence <m>\mathbf{c}</m>, add a new vertex and connect it to the vertices having degrees <m>c_{i_r}</m> for <m>1\leq r\leq k</m>.
            This produces a graph with degree sequence <m>\mathbf{d}</m>.
        </p>
        <p>
            We next prove that if <m>\mathbf{d}</m> is graphic, then so is <m>\mathbf{c}</m>.
            Our first goal is to show that, much like the case of threshold graphs, if <m>\mathbf{d}</m> is graphic then there is a graph realizing <m>\mathbf{d}</m> such that a vertex of degree <m>d_i</m> is connected to the <m>d_i</m> vertices of highest degrees.
            Let <m>G</m> be a graph with degree sequence <m>\mathbf{d}</m>.
            Relabel the vertex set of <m>G</m> as <m>\{v_1,\ldots,v_n\}</m> such that <m>d_i=\deg(v_i)</m>. 
            We say that <m>j</m> and <m>k</m> are a <em>missing pair</em> if there is an <m>i</m> so that <m>v_j</m> is adjacent to <m>v_i</m>, <m>v_k</m> is not adjacent to <m>v_i</m>, and <m>d_j\lt d_k</m>.
            In other words, there is a neighbor of <m>v_i</m> with strictly smaller degree than some non-neighbor of <m>v_i</m>.
            If we have a missing pair, then there must be a fourth vertex <m>v_t</m> that is a neighbor of <m>v_k</m> but not of <m>v_j</m>.
            We can then delete from <m>G</m> the edges
            <me>
                \{v_i,v_j\} \text{ and } \{v_k,v_t\}
            </me>
            and replace them with the edges
            <me>
                \{v_i,v_k\} \text{ and } \{v_j,v_t\} \, .
            </me>
            This yields a new graph with degree sequence <m>\mathbf{d}</m> and one less missing pair than <m>G</m>.
            Iterating this process, we eventually reach a graph <m>H</m> realizing <m>\mathbf{d}</m> that has no missing pairs.
            If <m>d_i</m> is the entry removed by the Havel-Hakimi step, then removing vertex <m>v_i</m> from <m>H</m> removes one edge from each of the highest degree vertices in <m>H</m>, which yields a graph realizing the degree sequence <m>\mathbf{c}</m>, as desired.
        </p>
    </proof>

    <p>
        The Havel-Hakimi theorem gives rise to an algorithm to test whether or not a proper sequence is graphic and to produce a graph realizing that sequence.
    </p>
        
    <algorithm xml:id="alg-havelhakimi">
        <title>The Havel-Hakimi test</title>  
        <statement>
            <p>
                Given a proper sequence <m>\mathbf{s}</m>, pick some entry <m>i</m> and apply a Havel-Hakimi step.
        Rearrange the resulting sequence in non-increasing order.
        If any entries are negative, then it is not graphic.
        If the resulting sequence is proper, then pick another entry and apply a Havel-Hakimi step.
        Continue in this way until either a negative entry is found, in which case the sequence is not graphic, or the resulting sequence consists of all zeros, in which case adding vertices and edges by reversing all the steps produces a graph realizing the degree sequence <m>\mathbf{s}</m>.
            </p>
        </statement>
    </algorithm>
    <exercise>
        <p>
            For each of the following proper sequences, determine whether or not it is graphic using the Havel-Hakimi test.
            If it is graphic, construct a graph realizing the degree sequence by applying the construction method given in the proof of the Havel-Hakimi theorem.
            <ol>
                <li>
                    <p>
                        <m>(5,5,5,5,5,3,3,1,1,1,1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(7, 5, 5, 4, 4, 3, 3, 2, 2, 1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(8,4,3,3,1,1,1,1,1,1)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>(7, 6, 6, 5, 5, 5, 4, 4)</m>
                    </p>
                </li>
            </ol>
        </p>
    </exercise>
</section>